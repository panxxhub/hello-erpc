/*
 * Generated by erpcgen 1.13.0 on Thu Aug 29 13:52:21 2024.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#if !defined(_erpc_servo_configure_server_hpp_)
#define _erpc_servo_configure_server_hpp_

#include "erpc_servo_configure_interface.hpp"

#include "erpc_server.hpp"
#include "erpc_codec.hpp"

#if 11300 != ERPC_VERSION_NUMBER
#error "The generated shim code version is different to the rest of eRPC code."
#endif


namespace erpcShim
{

/*!
 * @brief Service subclass for ServoConfigureService.
 */
class ServoConfigureService_service : public erpc::Service
{
public:
    ServoConfigureService_service(ServoConfigureService_interface *_ServoConfigureService_interface);

    virtual ~ServoConfigureService_service();

    /*! @brief return service interface handler. */
    ServoConfigureService_interface* getHandler(void);

    /*! @brief Call the correct server shim based on method unique ID. */
    virtual erpc_status_t handleInvocation(uint32_t methodId, uint32_t sequence, erpc::Codec * codec, erpc::MessageBufferFactory *messageFactory, erpc::Transport * transport);

private:
    ServoConfigureService_interface *m_handler;
    /*! @brief Server shim for setSdoSubEntry of ServoConfigureService interface. */
    erpc_status_t setSdoSubEntry_shim(erpc::Codec * codec, erpc::MessageBufferFactory *messageFactory, erpc::Transport * transport, uint32_t sequence);

    /*! @brief Server shim for sdoLoadFactorySettings of ServoConfigureService interface. */
    erpc_status_t sdoLoadFactorySettings_shim(erpc::Codec * codec, erpc::MessageBufferFactory *messageFactory, erpc::Transport * transport, uint32_t sequence);

    /*! @brief Server shim for sdoEntryLoadFactorySettings of ServoConfigureService interface. */
    erpc_status_t sdoEntryLoadFactorySettings_shim(erpc::Codec * codec, erpc::MessageBufferFactory *messageFactory, erpc::Transport * transport, uint32_t sequence);

    /*! @brief Server shim for sdoSubEntryLoadFactorySettings of ServoConfigureService interface. */
    erpc_status_t sdoSubEntryLoadFactorySettings_shim(erpc::Codec * codec, erpc::MessageBufferFactory *messageFactory, erpc::Transport * transport, uint32_t sequence);

    /*! @brief Server shim for getSdoSubEntry of ServoConfigureService interface. */
    erpc_status_t getSdoSubEntry_shim(erpc::Codec * codec, erpc::MessageBufferFactory *messageFactory, erpc::Transport * transport, uint32_t sequence);

    /*! @brief Server shim for saveAllToNonVolatileMemory of ServoConfigureService interface. */
    erpc_status_t saveAllToNonVolatileMemory_shim(erpc::Codec * codec, erpc::MessageBufferFactory *messageFactory, erpc::Transport * transport, uint32_t sequence);
};

} // erpcShim


#endif // _erpc_servo_configure_server_hpp_
