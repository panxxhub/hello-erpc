/*
 * Generated by erpcgen 1.13.0 on Fri Aug 30 12:29:51 2024.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#if !defined(_erpc_servo_configure_common_hpp_)
#define _erpc_servo_configure_common_hpp_


#include <cstddef>
#include <cstdint>

#include "erpc_version.h"

#if 11300 != ERPC_VERSION_NUMBER
#error "The generated shim code version is different to the rest of eRPC code."
#endif


#if !defined(ERPC_TYPE_DEFINITIONS_ERPC_SERVO_CONFIGURE)
#define ERPC_TYPE_DEFINITIONS_ERPC_SERVO_CONFIGURE

// Enumerators data types declarations
typedef enum AxisType
{
    D_AXIS = 0,
    Q_AXIS = 1
} AxisType;

typedef enum ErpcAdcType
{
    ERPC_ADC_VBUS = 0,
    ERPC_ADC_IBUS = 1,
    ERPC_ADC_TEMP = 2,
    ERPC_ADC_CURRENT0 = 3,
    ERPC_ADC_CURRENT1 = 4,
    ERPC_ADC_CURRENT2 = 5,
    ERPC_ADC_VOLTAGE0 = 6,
    ERPC_ADC_VOLTAGE1 = 7,
    ERPC_ADC_VOLTAGE2 = 8,
    ERPC_ADC_MAIN_ENCODER_SIN = 9,
    ERPC_ADC_MAIN_ENCODER_COS = 10
} ErpcAdcType;

// Aliases data types declarations
typedef struct DQ DQ;
typedef struct OscDataElement OscDataElement;
typedef struct PV PV;
typedef struct SdoSubEntry SdoSubEntry;
typedef struct Sdo Sdo;
typedef struct OscDataFragment OscDataFragment;
typedef struct MainEncoderInfo MainEncoderInfo;

// Structures/unions data types declarations
struct DQ
{
    float d;
    float q;
};

struct OscDataElement
{
    int16_t v_bus;
    int16_t v_3d[3];
    int16_t c_3d[3];
    uint32_t timestamp;
};

struct PV
{
    float p;
    float v;
};

struct SdoSubEntry
{
    uint8_t sub_index;
    uint32_t bitsize;
    uint8_t data[8];
};

struct Sdo
{
    uint16_t index;
    SdoSubEntry sub_entries[64];
};

struct OscDataFragment
{
    int16_t id;
    OscDataElement data[64];
};

struct MainEncoderInfo
{
    uint64_t timestamp;
    int32_t velocity;
    int32_t single_turn;
    int16_t single_turn_width;
    int32_t multi_turn;
};


// Constant variable declarations
extern const int32_t servo_param_max_size;

extern const int32_t sdo_max_sub_entry_size;

extern const int32_t osc_fragment_max_size;

extern const double velocity_to_rmp_ratio;

#endif // ERPC_TYPE_DEFINITIONS_ERPC_SERVO_CONFIGURE


#endif // _erpc_servo_configure_common_hpp_
