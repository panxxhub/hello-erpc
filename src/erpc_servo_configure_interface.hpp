/*
 * Generated by erpcgen 1.13.0 on Fri Aug 30 12:29:51 2024.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#if !defined(_erpc_servo_configure_interface_hpp_)
#define _erpc_servo_configure_interface_hpp_

#include "erpc_servo_configure_common.hpp"

namespace erpcShim
{


// Abstract base class for ServoConfigureService
class ServoConfigureService_interface
{
    public:
        static const uint8_t m_serviceId = 1;
        static const uint8_t m_getAdcRawId = 1;
        static const uint8_t m_getAdcSinCosRawId = 2;
        static const uint8_t m_getAdcCurrentRawId = 3;
        static const uint8_t m_getAdcVoltageRawId = 4;
        static const uint8_t m_sdoLoadFactorySettingsId = 5;
        static const uint8_t m_sdoEntryLoadFactorySettingsId = 6;
        static const uint8_t m_sdoSubEntryLoadFactorySettingsId = 7;
        static const uint8_t m_setSdoSubEntryId = 8;
        static const uint8_t m_getSdoSubEntryId = 9;
        static const uint8_t m_saveAllToNonVolatileMemoryId = 10;
        static const uint8_t m_loadAllFromNonVolatileMemoryId = 11;
        static const uint8_t m_sdoSubEntrySaveToNonVolatileMemoryId = 12;
        static const uint8_t m_sdoSubEntryLoadFromNonVolatileMemoryId = 13;

        virtual ~ServoConfigureService_interface(void);

        virtual int32_t getAdcRaw(ErpcAdcType adcType, int32_t * value) = 0;

        virtual int32_t getAdcSinCosRaw(int32_t * sin, int32_t * cos) = 0;

        virtual int32_t getAdcCurrentRaw(int32_t * a, int32_t * b, int32_t * c) = 0;

        virtual int32_t getAdcVoltageRaw(int32_t * a, int32_t * b, int32_t * c) = 0;

        virtual int32_t sdoLoadFactorySettings(void) = 0;

        virtual int32_t sdoEntryLoadFactorySettings(uint16_t index) = 0;

        virtual int32_t sdoSubEntryLoadFactorySettings(uint16_t index, uint8_t subIndex) = 0;

        virtual int32_t setSdoSubEntry(uint16_t index, const SdoSubEntry * subEntry) = 0;

        virtual int32_t getSdoSubEntry(uint16_t index, uint8_t subIndex, SdoSubEntry * subEntry) = 0;

        virtual int32_t saveAllToNonVolatileMemory(void) = 0;

        virtual int32_t loadAllFromNonVolatileMemory(void) = 0;

        virtual int32_t sdoSubEntrySaveToNonVolatileMemory(uint16_t index, uint8_t subIndex) = 0;

        virtual int32_t sdoSubEntryLoadFromNonVolatileMemory(uint16_t index, uint8_t subIndex) = 0;
private:
};
} // erpcShim


#endif // _erpc_servo_configure_interface_hpp_
